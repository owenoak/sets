




http://dean.edwards.name/weblog/2006/07/enum/
	- globally declare 
		forEach(thing, iterator)
			- if thing has forEach, use that
			- if thing is array-like iterate
			- if thing is function like or object like, iterate over properties
			- if thing is class instance, iterate over only class props

	- do this for map, filter, etc?
	- very much like adding new language structures...



https://developer.mozilla.org/en/New_in_JavaScript_1.6#Array_and_String_generics
There are seven new Array methods that can be separated into two categories, item location methods and iterative methods. The item location methods are:

    * indexOf() - returns the index of the given item's first occurrence.
    * lastIndexOf() - returns the index of the given item's last occurrence. 

The iterative methods are:

    * every() - runs a function on items in the array while that function is returning true. It returns true if the function returns true for every item it could visit.
    * filter() - runs a function on every item in the array and returns an array of all items for which the function returns true.
    * forEach() - runs a function on every item in the array.
    * map() - runs a function on every item in the array and returns the results in an array.
    * some() - runs a function on items in the array while that function returns false. It returns true if the function returns true for any item it could visit. 